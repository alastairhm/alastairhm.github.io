<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>assembly on 0x32++</title><link>https://blog.0x32.co.uk/tags/assembly/</link><description>Recent content in assembly on 0x32++</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Fri, 11 Dec 2020 15:15:26 +0000</lastBuildDate><atom:link href="https://blog.0x32.co.uk/tags/assembly/index.xml" rel="self" type="application/rss+xml"/><item><title>10 PRINT6502</title><link>https://blog.0x32.co.uk/posts/10print6502/</link><pubDate>Fri, 11 Dec 2020 15:15:26 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/10print6502/</guid><description>BBC Micro machine code take on C64 10 Print one line random pattern generator.
Code at Github 10print.asm
10 PRINT 6502 \ 10 PRINT \ Using BeebASM assembler \ (c) Alastair Montgomery INCLUDE &amp;#34;../lib/constants.asm&amp;#34; seed = &amp;amp;70 ORG &amp;amp;2000 .start LDA #23 STA seed LDA #63 STA seed+1 LDX #0 .char LDA chartable, X JSR oswrch INX CPX #23 BNE char .loop JSR random BMI two .one LDA #224 JMP print .</description></item></channel></rss>