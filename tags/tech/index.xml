<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>tech on 0x32++</title><link>https://blog.0x32.co.uk/tags/tech/</link><description>Recent content in tech on 0x32++</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Wed, 13 Dec 2023 12:36:56 +0000</lastBuildDate><atom:link href="https://blog.0x32.co.uk/tags/tech/index.xml" rel="self" type="application/rss+xml"/><item><title>Node JS Jokebot</title><link>https://blog.0x32.co.uk/posts/node_jokebot/</link><pubDate>Wed, 13 Dec 2023 12:36:56 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/node_jokebot/</guid><description>Learning Node JS I&amp;rsquo;ve started playing about with Node JS to learn it enough to modify some legacy Lambda code.
One of the tasks I set myself was to write a Joke bot for Mastodon, which work out to be fairly easy with a couple of packages got and masto.
Dad Joke Bot the code is only 32 lines long, looking to expand it to be able to post images as well.</description></item><item><title>Python icecream debug</title><link>https://blog.0x32.co.uk/posts/python_icecream/</link><pubDate>Fri, 03 Nov 2023 15:58:16 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/python_icecream/</guid><description>Icecream Debug Do you ever use print() or log() to debug your code? Of course you do. IceCream, or ic for short, makes print debugging a little sweeter.
ic() is like print(), but better.
https://github.com/gruns/icecream</description></item><item><title>TFT Display ST7735 MicroPython</title><link>https://blog.0x32.co.uk/posts/pico8/</link><pubDate>Fri, 17 Feb 2023 16:31:44 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/pico8/</guid><description>I got a cheap SPI TFT ST7735 Display module with SD Card reader off ebay, it had an unusual number of pins on the back.
Numbers It took a while searching about on the internet and some head scratching to find a library and work out what connected to what on the Pico.
This is what I found, and worked out.
TFT Board Raspberry Pi Pin LED 3v3(Out) SCK GP10 SDA GP11 AO/DC GP16 Reset GP17 CS GP18 GND GND VCC VBUS 5V Using that information I was able to put together this library based on a few others I found and a few test programs.</description></item><item><title>Small LED Matrix Numbers</title><link>https://blog.0x32.co.uk/posts/pico7/</link><pubDate>Thu, 26 Jan 2023 15:16:16 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/pico7/</guid><description>Something I did a few (8) years ago on the Arduino to display two-digit numbers on a 8x8 LED matrix, this is an update to do the same in Micropthon.
Numbers have been defined to 3x5 pixels, so for a two-digit number it fits into 8x5 LED grid with spacing, saving some LED Matrix space.
Numbers The code for this can be found here numbers.py
This original Arduino code is here.</description></item><item><title>DHT11 Sensor in Micropython</title><link>https://blog.0x32.co.uk/posts/pico6/</link><pubDate>Mon, 23 Jan 2023 16:39:29 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/pico6/</guid><description>Just a short bit of code to test a DHT11 temperature and humidity sensor module.
This version has just three pins VCC, GND and data, so easy to connect and use with the DHT library.
dht11.py.
DHT11 Module</description></item><item><title>Raspberry Pi Pico W LED Matrix</title><link>https://blog.0x32.co.uk/posts/pico5/</link><pubDate>Fri, 20 Jan 2023 09:56:40 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/pico5/</guid><description>Found a LED Matrix with a Max7219 in my parts bin (box of random electronics in the garage) so looked into getting it working with the Pico and MicroPython.
This is an example why I love open source. The original library I found was functional but sparse, last committed to 4 years ago. There were a few forks, most not much activity. One had been active recently and had some major improvements in functionality so switched over to that fork.</description></item><item><title>Raspberry Pi Pico W Mandelbrot Set</title><link>https://blog.0x32.co.uk/posts/pico4/</link><pubDate>Tue, 17 Jan 2023 12:29:25 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/pico4/</guid><description>Stumbled across a Python script to run a Mandelbrot set in ASCII in Python so I thought I would see how it ran on the RaspberryPi Pico.
After tweaking it slightly from the source it ended up like this mandelbrot.py
This results in the following;
................................................................................................... ..................................................................................................... ....................................................................................................... ......................................................................................................... ...................................,,,,,,,,,,,,,,,,,....................................................... ..........................,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,............................................. .....................,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,...................................... .................,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,----------,,,,,,,,,,,,................................. ...............,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,---------:i;;::::-------,,,,,,,,,............................. .............,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,----------:::;ih$+;;::::-------,,,,,,,,,.......................... ...........,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,------------::::;;+# hiiii :---------,,,,,,,,,....................... .........,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,-------------:::::;;i+hM MM #+;;:---------,,,,,,,,,,.................... .........,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,--------------::::::;;ii+hH* $H+ii;:::---------,,,,,,,,,,.................. ........,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,---------------::::::;i+HhH *h++;;::::---------,,,,,,,,,,................ .......,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,---------------::::::;;;+ *@ +i;::::::-------,,,,,,,,,,,.............. .....,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,---------------::::;;;;;ii+hM@ $hii;;:::::::------,,,,,,,,,,,............ .</description></item><item><title>Raspberry Pi Pico W Temperature</title><link>https://blog.0x32.co.uk/posts/pico3/</link><pubDate>Tue, 17 Jan 2023 12:29:22 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/pico3/</guid><description>Have been tinkering with temperature measurement using the Raspberry Pi Pico.
First with the internal temperature sensor and then using a TMP36 temperature sensor externally.
I wrote two classes to access these and return the reading.
Internal Temperature External Temperature Here is an example using the two sensors together temps.py
You will need to upload the two classes to the Pico first in a library sub-directory.
Here is how you would wire it up on a breadboard tmp36.</description></item><item><title>Rasberry Pi Pico W OLED</title><link>https://blog.0x32.co.uk/posts/pico2/</link><pubDate>Tue, 10 Jan 2023 13:38:21 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/pico2/</guid><description>Some components arrived from AliExpress recently so been able to play with an I2C OLED display with my Pico W.
Hello World Test
Hello World Test Code of this is here https://github.com/alastairhm/pico_w/blob/main/i2c_scan.py
And also used here to display the IP address after connected to the wifi https://github.com/alastairhm/pico_w/blob/main/wifi_oled.py
Next thing I&amp;rsquo;ve been playing with is internal and external temperature sensors, I will post about that soon.</description></item><item><title>Raspberry Pi Pico W</title><link>https://blog.0x32.co.uk/posts/pico/</link><pubDate>Wed, 04 Jan 2023 13:31:23 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/pico/</guid><description>Just before Christmas I got a Raspberry Pi Pico W to have a play with.
Looking forward to using MicroPython to do some LED flashing and other things.
Started a repo on Github for it Pico W Repo</description></item><item><title>Steam World Dig</title><link>https://blog.0x32.co.uk/posts/steamworlddig/</link><pubDate>Thu, 20 Jan 2022 16:18:47 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/steamworlddig/</guid><description>Picked this indie retro style platform game for my Playstation 5 cheap recently.
It was released in 2013, so old now but still a good play.
Links Game Wiki</description></item><item><title>BBC Twitter Bot Fun</title><link>https://blog.0x32.co.uk/posts/bbcbot/</link><pubDate>Wed, 19 Jan 2022 13:48:47 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/bbcbot/</guid><description>More fun playing with BBC Twitter Bot.
Source: https://t.co/ks0jhudxdM pic.twitter.com/7AHXAV6oud
&amp;mdash; @bbcmicrobot@mastodon.me.uk (@bbcmicrobot) January 19, 2022 Source: https://t.co/xBabCMPWCX pic.twitter.com/R2wifhK7I7
&amp;mdash; @bbcmicrobot@mastodon.me.uk (@bbcmicrobot) January 19, 2022 Source: https://t.co/jVpUMLBa8D pic.twitter.com/W9AozQlY0y
&amp;mdash; @bbcmicrobot@mastodon.me.uk (@bbcmicrobot) January 19, 2022 Source: https://t.co/Rt3DOf1FOh pic.twitter.com/KUK7hiq7if
&amp;mdash; @bbcmicrobot@mastodon.me.uk (@bbcmicrobot) January 19, 2022</description></item><item><title>Clipboard History</title><link>https://blog.0x32.co.uk/posts/cliphistory/</link><pubDate>Mon, 09 Aug 2021 12:07:54 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/cliphistory/</guid><description>I wrote a simple Python script to monitor the clipboard and write any unique text content out to a YAML file for a history. It might turn into something better eventually.
Update Updated to use a settings file for file location and size.
#!/usr/bin/env python3 import pyperclip import time import yaml import toml import os from yaml.loader import SafeLoader script_path = os.path.dirname(os.path.abspath(__file__)) settings = toml.load(os.path.join(script_path, &amp;#34;clippy.toml&amp;#34;)) history = settings[&amp;#34;history&amp;#34;] max_size = settings[&amp;#34;size&amp;#34;] cliptext = &amp;#34;&amp;#34; clip_array = [] with open(history, &amp;#34;r&amp;#34;) as f: clip_array = list(yaml.</description></item><item><title>Beebasm Mac Catalina</title><link>https://blog.0x32.co.uk/posts/beebasm/</link><pubDate>Thu, 14 Jan 2021 16:50:36 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/beebasm/</guid><description>Got a new Mac with Catalina pre-installed, so had to compile my own version of Beebasm for the 64 bit OS.
BeebAsm.zip</description></item><item><title>10 PRINT6502</title><link>https://blog.0x32.co.uk/posts/10print6502/</link><pubDate>Fri, 11 Dec 2020 15:15:26 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/10print6502/</guid><description>BBC Micro machine code take on C64 10 Print one line random pattern generator.
Code at Github 10print.asm
10 PRINT 6502 \ 10 PRINT \ Using BeebASM assembler \ (c) Alastair Montgomery INCLUDE &amp;#34;../lib/constants.asm&amp;#34; seed = &amp;amp;70 ORG &amp;amp;2000 .start LDA #23 STA seed LDA #63 STA seed+1 LDX #0 .char LDA chartable, X JSR oswrch INX CPX #23 BNE char .loop JSR random BMI two .one LDA #224 JMP print .</description></item><item><title>CA Thumbprint from Python</title><link>https://blog.0x32.co.uk/posts/thumbprint/</link><pubDate>Wed, 02 Dec 2020 13:29:00 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/thumbprint/</guid><description>Recently had a need to get the CA Thumbprint from the Root certificate of a domain. This was for creating OIDC provider for an AWS EKS cluster.
This is the solution I came up with.</description></item><item><title>6502 Assembly Language</title><link>https://blog.0x32.co.uk/posts/6502/</link><pubDate>Thu, 26 Nov 2020 16:54:08 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/6502/</guid><description>Been trying to relearn 6502 assembly language for fun, its a lot faster and easier than the first time on actual hardware when I was a teenager.
Been using a book I picked up from eBay Discovering BBC Micro Machine Code by A.P. Stephenson
Using BeebAsm assembler on my Mac with a BBC Micro emulator, rather than build in BBC BASIC one.
You can find my code at Github https://github.com/alastairhm/beebasm</description></item><item><title>FreeBSD</title><link>https://blog.0x32.co.uk/posts/freebsd/</link><pubDate>Sun, 11 Oct 2020 20:53:20 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/freebsd/</guid><description>One thing that I&amp;rsquo;ve never got around to seriously try in my years messing around with different operating systems is BSD, other than the flavor of it your get with MacOs.
Having watch a lot of videos around it recently on YouTube by RoboNuggie on FreeBSD it encouraged me to have to give it a go.
It went surprisingly well the and have tried both XFCE and Mate desktop installs. Something that I&amp;rsquo;ll look at using more of in the future as a backup daily driver.</description></item><item><title>Puppy linux 9.5</title><link>https://blog.0x32.co.uk/posts/puppylinux/</link><pubDate>Fri, 25 Sep 2020 10:07:14 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/puppylinux/</guid><description>Puppy Linux 9.5 One of my favorite low foot print Linux installs is Puppy Linux been using it on and off for years.
It has saved my bacon on a few times used to boot and restore or save data from a dead OS install.
New version looks good so far.</description></item><item><title>10 PRINT</title><link>https://blog.0x32.co.uk/posts/10print/</link><pubDate>Fri, 04 Sep 2020 16:08:20 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/10print/</guid><description>BBC Micro take on C64 10 Print one line random pattern generator.
10 MODE 0 20 N=RND(1):IF N &amp;gt; 0.5 THEN PRINT &amp;#34;/&amp;#34;; ELSE PRINT &amp;#34;\&amp;#34;; 30 GOTO 20 RUN pic.twitter.com/xQag2GKwx0
&amp;mdash; @bbcmicrobot@mastodon.me.uk (@bbcmicrobot) September 4, 2020</description></item><item><title>Processing</title><link>https://blog.0x32.co.uk/posts/processing/</link><pubDate>Thu, 03 Sep 2020 09:55:53 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/processing/</guid><description>Make learning programming fun It is funny how things come around again, when I started learning to programming back in the 1980s on my 8 bit machines (ZX81, Acorn Electron, BBC Micro) I used to play with graphics a lot. It gave instant feedback and visually showed the results of things like recursion. I had great fun playing with Fractals and other procedural generated images.
Recently I discovered a YouTube channel and programming platform which took me right back to those days.</description></item><item><title>Which Shell?</title><link>https://blog.0x32.co.uk/posts/shell/</link><pubDate>Thu, 27 Aug 2020 08:13:08 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/shell/</guid><description>I made the switch from Bash shell to the FISH shell a couple of years ago now and never looked back.
Customization and auto-complete features was the killer features for me.
Jump to the 20 minute mark for the shell discussion if you want.
Video Source Destination Linux
Links friendly interactive shell
ZSH
BASH
FISH vs ZSH</description></item><item><title>Golden Tail and Kitsune's Curse New Retro Game</title><link>https://blog.0x32.co.uk/posts/goldentail/</link><pubDate>Wed, 26 Aug 2020 09:08:22 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/goldentail/</guid><description>New retro game, looks worth getting a Amstrad CPC emulator setup to play it.
Video Source Retro Collection
Juan&amp;rsquo;s games: (https://www.usebox.net/jjm/)
Buy physical copies of these games:
Golden Tail
Kitsune Curse</description></item><item><title>Mree</title><link>https://blog.0x32.co.uk/posts/mree/</link><pubDate>Wed, 19 Aug 2020 13:51:27 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/mree/</guid><description>Mr. Ee from Micro Power for the BBC Micro nice variation on the Pacman theme.
Play Online at BBC Mirco</description></item><item><title>Acorn Electron Sound Mod</title><link>https://blog.0x32.co.uk/posts/acornmod/</link><pubDate>Wed, 19 Aug 2020 08:31:48 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/acornmod/</guid><description>Interest video about modding the Acorn Electron.</description></item><item><title>Apple Pi Os</title><link>https://blog.0x32.co.uk/posts/applepi/</link><pubDate>Fri, 14 Aug 2020 11:37:44 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/applepi/</guid><description>Interesting looking Pi Os</description></item><item><title>Hugo Lbry Shortcode</title><link>https://blog.0x32.co.uk/posts/lbry_shortcode/</link><pubDate>Thu, 13 Aug 2020 13:50:32 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/lbry_shortcode/</guid><description>One thing I like about Hugo is how easy it is to expand its functionality with your own code.
For example was able to create a shortcode to embed Lbry.tv videos into a post in around five minutes.
First I created an empty file layouts/shortcodes/lbry.html which I pasted the basic embed code take from the share button on one of their videos.
&amp;lt;iframe id=&amp;#34;lbry-iframe&amp;#34; width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34; src=&amp;#34;https://lbry.tv/$/embed/this-new-fedora-powered-thinkpad-p53-is/097106eb68aebc90b33d83bb053467af942a8e20&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt; Then parameterized this so that the src url can be changed.</description></item><item><title>The Pit New Retro Game</title><link>https://blog.0x32.co.uk/posts/thepit/</link><pubDate>Thu, 13 Aug 2020 09:08:22 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/thepit/</guid><description>New retro game, looks worth getting a Commodore emulator setup to play it.
This style of game is one of my favorites, loved Boulder Dash and Repton.
Video Source Retro Collection
The Pit Download
Play Online</description></item><item><title>Retro Gaming Commando</title><link>https://blog.0x32.co.uk/posts/commando/</link><pubDate>Wed, 12 Aug 2020 08:57:44 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/commando/</guid><description>One of the games I loved playing in my youth on my BBC Micro, I&amp;rsquo;m still rubbish at it to this day.
Links Play Online at BBC Mirco
Game FAQs</description></item><item><title>Markor Android App</title><link>https://blog.0x32.co.uk/posts/markor/</link><pubDate>Mon, 10 Aug 2020 22:16:46 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/markor/</guid><description>Found this useful Android Mark down application.
Markor it has a Hugo template to use for blank documents which is useful.
It&amp;rsquo;s on FDroid so it&amp;rsquo;s easy to install o on my kindle as well.
Then use Github website to upload the new file to my Hugo blog repo.</description></item><item><title>Posting from Android 2</title><link>https://blog.0x32.co.uk/posts/phone/</link><pubDate>Mon, 10 Aug 2020 17:07:46 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/phone/</guid><description>Testing github Web upload.
Update
Edited on mark down app, uploaded again via github web page.</description></item><item><title>Mgit</title><link>https://blog.0x32.co.uk/posts/mgit/</link><pubDate>Mon, 10 Aug 2020 16:32:55 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/mgit/</guid><description>Found mGit App which looks like it would do the job of repo management on Android.
First trial not so good.
Wondering if its an issue with having MFA enabled on my Github account, although using my personal access token instead of the password should work I would have thought.
I&amp;rsquo;ve submitted an issue on their Github page, so wait and see what they say about it.</description></item><item><title>Posting from Android</title><link>https://blog.0x32.co.uk/posts/android_posts/</link><pubDate>Mon, 10 Aug 2020 15:07:46 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/android_posts/</guid><description>Trying to think of a way to be able to post content from my Android devices (phone/ Fire Tablet).
Basically would need just the following;
Text editor for creating markdown for the post. Git to checkout, commit and push updates to GitHub. My Travis CI pipeline would then handle the publishing.
Finding a text editor app isn&amp;rsquo;t a problem there are any number of them on both Google Play and Amazon Kindle stores which could be used.</description></item><item><title>Automation</title><link>https://blog.0x32.co.uk/posts/automation/</link><pubDate>Mon, 10 Aug 2020 11:00:49 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/automation/</guid><description>Automate publishing To make the publishing of new content easily I am using Travis CI to publish changes.
I did try installing Hugo from source but this took longer and was producing errors so it was easier to download the binary.
Using this as the Travis CI pipline yaml.
Travis CI Pipeline # Auto deploy repo from Github to Amazon S3 bucket via Travis CI # * Set env vars for ACCESS_KEY_ID, BUCKET_NAME and SECRET_ACCESS_KEY on Travis # * Update `bucket.</description></item></channel></rss>