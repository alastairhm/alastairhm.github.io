<?xml version="1.0" encoding="utf-8" standalone="yes"?><rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Technical on 0x32++</title><link>https://blog.0x32.co.uk/categories/technical/</link><description>Recent content in Technical on 0x32++</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><lastBuildDate>Mon, 09 Aug 2021 12:07:54 +0100</lastBuildDate><atom:link href="https://blog.0x32.co.uk/categories/technical/index.xml" rel="self" type="application/rss+xml"/><item><title>Clipboard History</title><link>https://blog.0x32.co.uk/posts/cliphistory/</link><pubDate>Mon, 09 Aug 2021 12:07:54 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/cliphistory/</guid><description>I wrote a simple Python script to monitor the clipboard and write any unique text content out to a YAML file for a history. It might turn into something better eventually.
Update Updated to use a settings file for file location and size.
#!/usr/bin/env python3 import pyperclip import time import yaml import toml import os from yaml.loader import SafeLoader script_path = os.path.dirname(os.path.abspath(__file__)) settings = toml.load(os.path.join(script_path, &amp;#34;clippy.toml&amp;#34;)) history = settings[&amp;#34;history&amp;#34;] max_size = settings[&amp;#34;size&amp;#34;] cliptext = &amp;#34;&amp;#34; clip_array = [] with open(history, &amp;#34;r&amp;#34;) as f: clip_array = list(yaml.</description></item><item><title>CA Thumbprint from Python</title><link>https://blog.0x32.co.uk/posts/thumbprint/</link><pubDate>Wed, 02 Dec 2020 13:29:00 +0000</pubDate><guid>https://blog.0x32.co.uk/posts/thumbprint/</guid><description>Recently had a need to get the CA Thumbprint from the Root certificate of a domain. This was for creating OIDC provider for an AWS EKS cluster.
This is the solution I came up with.</description></item><item><title>Puppy linux 9.5</title><link>https://blog.0x32.co.uk/posts/puppylinux/</link><pubDate>Fri, 25 Sep 2020 10:07:14 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/puppylinux/</guid><description>Puppy Linux 9.5 One of my favorite low foot print Linux installs is Puppy Linux been using it on and off for years.
It has saved my bacon on a few times used to boot and restore or save data from a dead OS install.
New version looks good so far.</description></item><item><title>Processing</title><link>https://blog.0x32.co.uk/posts/processing/</link><pubDate>Thu, 03 Sep 2020 09:55:53 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/processing/</guid><description>Make learning programming fun It is funny how things come around again, when I started learning to programming back in the 1980s on my 8 bit machines (ZX81, Acorn Electron, BBC Micro) I used to play with graphics a lot. It gave instant feedback and visually showed the results of things like recursion. I had great fun playing with Fractals and other procedural generated images.
Recently I discovered a YouTube channel and programming platform which took me right back to those days.</description></item><item><title>Which Shell?</title><link>https://blog.0x32.co.uk/posts/shell/</link><pubDate>Thu, 27 Aug 2020 08:13:08 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/shell/</guid><description>I made the switch from Bash shell to the FISH shell a couple of years ago now and never looked back.
Customization and auto-complete features was the killer features for me.
Jump to the 20 minute mark for the shell discussion if you want.
Video Source Destination Linux
Links friendly interactive shell
ZSH
BASH
FISH vs ZSH</description></item><item><title>Hugo Lbry Shortcode</title><link>https://blog.0x32.co.uk/posts/lbry_shortcode/</link><pubDate>Thu, 13 Aug 2020 13:50:32 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/lbry_shortcode/</guid><description>One thing I like about Hugo is how easy it is to expand its functionality with your own code.
For example was able to create a shortcode to embed Lbry.tv videos into a post in around five minutes.
First I created an empty file layouts/shortcodes/lbry.html which I pasted the basic embed code take from the share button on one of their videos.
&amp;lt;iframe id=&amp;#34;lbry-iframe&amp;#34; width=&amp;#34;560&amp;#34; height=&amp;#34;315&amp;#34; src=&amp;#34;https://lbry.tv/$/embed/this-new-fedora-powered-thinkpad-p53-is/097106eb68aebc90b33d83bb053467af942a8e20&amp;#34; allowfullscreen&amp;gt;&amp;lt;/iframe&amp;gt; Then parameterized this so that the src url can be changed.</description></item><item><title>Markor Android App</title><link>https://blog.0x32.co.uk/posts/markor/</link><pubDate>Mon, 10 Aug 2020 22:16:46 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/markor/</guid><description>Found this useful Android Mark down application.
Markor it has a Hugo template to use for blank documents which is useful.
It&amp;rsquo;s on FDroid so it&amp;rsquo;s easy to install o on my kindle as well.
Then use Github website to upload the new file to my Hugo blog repo.</description></item><item><title>Posting from Android 2</title><link>https://blog.0x32.co.uk/posts/phone/</link><pubDate>Mon, 10 Aug 2020 17:07:46 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/phone/</guid><description>Testing github Web upload.
Update
Edited on mark down app, uploaded again via github web page.</description></item><item><title>Mgit</title><link>https://blog.0x32.co.uk/posts/mgit/</link><pubDate>Mon, 10 Aug 2020 16:32:55 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/mgit/</guid><description>Found mGit App which looks like it would do the job of repo management on Android.
First trial not so good.
Wondering if its an issue with having MFA enabled on my Github account, although using my personal access token instead of the password should work I would have thought.
I&amp;rsquo;ve submitted an issue on their Github page, so wait and see what they say about it.</description></item><item><title>Posting from Android</title><link>https://blog.0x32.co.uk/posts/android_posts/</link><pubDate>Mon, 10 Aug 2020 15:07:46 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/android_posts/</guid><description>Trying to think of a way to be able to post content from my Android devices (phone/ Fire Tablet).
Basically would need just the following;
Text editor for creating markdown for the post. Git to checkout, commit and push updates to GitHub. My Travis CI pipeline would then handle the publishing.
Finding a text editor app isn&amp;rsquo;t a problem there are any number of them on both Google Play and Amazon Kindle stores which could be used.</description></item><item><title>Automation</title><link>https://blog.0x32.co.uk/posts/automation/</link><pubDate>Mon, 10 Aug 2020 11:00:49 +0100</pubDate><guid>https://blog.0x32.co.uk/posts/automation/</guid><description>Automate publishing To make the publishing of new content easily I am using Travis CI to publish changes.
I did try installing Hugo from source but this took longer and was producing errors so it was easier to download the binary.
Using this as the Travis CI pipline yaml.
Travis CI Pipeline # Auto deploy repo from Github to Amazon S3 bucket via Travis CI # * Set env vars for ACCESS_KEY_ID, BUCKET_NAME and SECRET_ACCESS_KEY on Travis # * Update `bucket.</description></item></channel></rss>